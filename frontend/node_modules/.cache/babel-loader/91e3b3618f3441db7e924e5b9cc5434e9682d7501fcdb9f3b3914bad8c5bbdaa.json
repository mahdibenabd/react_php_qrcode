{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\interview-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qrCodeUrl, setQrCodeUrl] = useState(null);\n  const [error, setError] = useState(\"\");\n  const generateQRCode = async () => {\n    setError(\"\");\n    setQrCodeUrl(null);\n    if (!text.trim()) {\n      setError(\"Veuillez saisir un texte.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost/api/qr_service.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setQrCodeUrl(data.qr_code_url);\n      } else {\n        setError(data.message || \"Erreur lors de la génération du QR code.\");\n      }\n    } catch (err) {\n      setError(\"Erreur réseau : \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"G\\xE9n\\xE9rateur de QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Entrez le texte ou URL\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateQRCode,\n        children: \"G\\xE9n\\xE9rer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), qrCodeUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"QR Code g\\xE9n\\xE9r\\xE9 :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: qrCodeUrl,\n          alt: \"QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: qrCodeUrl,\n          download: \"qrcode.png\",\n          children: \"T\\xE9l\\xE9charger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZOb+1ZJDOhXmO+Bv/ajyOeGTOrc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","text","setText","qrCodeUrl","setQrCodeUrl","error","setError","generateQRCode","trim","response","fetch","method","headers","body","JSON","stringify","data","json","success","qr_code_url","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","src","alt","href","download","_c","$RefreshReg$"],"sources":["C:/wamp64/www/interview-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [qrCodeUrl, setQrCodeUrl] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const generateQRCode = async () => {\n    setError(\"\");\n    setQrCodeUrl(null);\n\n    if (!text.trim()) {\n      setError(\"Veuillez saisir un texte.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost/api/qr_service.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ text }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setQrCodeUrl(data.qr_code_url);\n      } else {\n        setError(data.message || \"Erreur lors de la génération du QR code.\");\n      }\n    } catch (err) {\n      setError(\"Erreur réseau : \" + err.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Générateur de QR Code</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Entrez le texte ou URL\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <button onClick={generateQRCode}>Générer</button>\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n        {qrCodeUrl && (\n          <div>\n            <h3>QR Code généré :</h3>\n            <img src={qrCodeUrl} alt=\"QR Code\" />\n            <a href={qrCodeUrl} download=\"qrcode.png\">\n              Télécharger\n            </a>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}